# ================================================================
# UALFlix Nginx Configuration - Master-Slave Architecture
# FUNCIONALIDADE 5: Estratégias de Replicação de Dados
# ================================================================

# Upstream definitions for load balancing and failover
upstream frontend_servers {
    server frontend:3000;
    keepalive 32;
}

upstream auth_servers {
    server authentication_service:8000 max_fails=3 fail_timeout=30s;
    keepalive 16;
}

upstream catalog_servers {
    server catalog_service:8000 max_fails=3 fail_timeout=30s;
    keepalive 16;
}

upstream streaming_servers {
    server streaming_service:8001 max_fails=3 fail_timeout=30s;
    keepalive 16;
}

upstream admin_servers {
    server admin_service:8002 max_fails=3 fail_timeout=30s;
    keepalive 8;
}

upstream database_manager_servers {
    server database_manager:5000 max_fails=2 fail_timeout=60s;
    keepalive 4;
}

# Main server configuration
server {
    listen 80;
    server_name localhost;
<<<<<<< Updated upstream
    client_max_body_size 1024M; 
=======
    
    # Increased limits for video uploads
    client_max_body_size 2048M;
    client_body_timeout 300s;
    client_header_timeout 60s;
    
    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
>>>>>>> Stashed changes

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # ================================================================
    # FRONTEND (React Application)
    # ================================================================
    location / {
        proxy_pass http://frontend_servers;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
<<<<<<< Updated upstream
        proxy_cache_bypass $http_upgrade;
    }

    # API Backend (Flask app)
    location /api/ {
        rewrite ^/api(/.*)$ $1 break;
        proxy_pass http://catalog_service:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Servir vídeos diretamente
    location /videos/ {
        alias /videos/;
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods 'GET, OPTIONS';
        add_header Access-Control-Allow-Headers 'Range';
        add_header Access-Control-Expose-Headers 'Content-Length,Content-Range';
    }

    localtion /stream/ {
        proxy_pass http://streaming_service:8001/stream/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}
=======
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Frontend-specific settings
        proxy_read_timeout 60s;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
    }

    # ================================================================
    # AUTHENTICATION SERVICE
    # ================================================================
    location /api/auth/ {
        # Remove /api/auth prefix before forwarding
        rewrite ^/api/auth(/.*)$ $1 break;
        
        proxy_pass http://auth_servers;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Auth-specific settings
        proxy_read_timeout 30s;
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        
        # CORS headers for authentication
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS' always;
        add_header Access-Control-Allow-Headers 'Content-Type, Authorization, X-Session-Token' always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'Content-Type, Authorization, X-Session-Token';
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain; charset=utf-8';
            add_header Content-Length 0;
            return 204;
        }
    }

    # ================================================================
    # ADMIN SERVICE (Database Management & Metrics)
    # ================================================================
    location /api/admin/ {
        rewrite ^/api/admin(/.*)$ /api/admin$1 break;
        
        proxy_pass http://admin_servers;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Extended timeouts for admin operations
        proxy_read_timeout 120s;
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        
        # CORS for admin panel
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header Access-Control-Allow-Headers 'Content-Type, Authorization, X-Session-Token' always;
    }

    # ================================================================
    # DATABASE MANAGER (NEW - Master-Slave Management)
    # ================================================================
    location /api/database/ {
        rewrite ^/api/database(/.*)$ $1 break;
        
        proxy_pass http://database_manager_servers;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Database operations may take longer
        proxy_read_timeout 180s;
        proxy_connect_timeout 15s;
        proxy_send_timeout 90s;
        
        # Admin-only access (could add IP restrictions here)
        # allow 10.0.0.0/8;
        # allow 172.16.0.0/12;
        # allow 192.168.0.0/16;
        # deny all;
    }

    # ================================================================
    # CATALOG SERVICE (Video Metadata & Upload)
    # ================================================================
    location /api/ {
        # Remove /api prefix before forwarding to catalog service
        rewrite ^/api(/.*)$ $1 break;
        
        proxy_pass http://catalog_servers;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Session-Token $http_x_session_token;
        
        # Extended settings for video uploads
        proxy_read_timeout 600s;        # 10 minutes for large uploads
        proxy_connect_timeout 60s;
        proxy_send_timeout 600s;
        proxy_request_buffering off;    # Stream uploads directly
        
        # Upload progress support
        proxy_set_header X-Content-Length $content_length;
        proxy_set_header Connection "";
    }

    # ================================================================
    # VIDEO STREAMING SERVICE
    # ================================================================
    location /stream/ {
        proxy_pass http://streaming_servers/stream/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Critical: Support for range requests (video seeking)
        proxy_set_header Range $http_range;
        proxy_set_header If-Range $http_if_range;
        
        # Streaming optimizations
        proxy_buffering off;            # Don't buffer video streams
        proxy_cache off;                # Don't cache video content
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        proxy_read_timeout 3600s;       # 1 hour for long videos
        proxy_send_timeout 3600s;
        
        # CORS for video streaming
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS' always;
        add_header Access-Control-Allow-Headers 'Range, Content-Type' always;
        add_header Access-Control-Expose-Headers 'Content-Length, Content-Range, Accept-Ranges' always;
        
        # Support for video seeking
        add_header Accept-Ranges bytes always;
    }

    # Alternative video access path for compatibility
    location /videos/ {
        proxy_pass http://streaming_servers/stream/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Range $http_range;
        
        # Same streaming optimizations as /stream/
        proxy_buffering off;
        proxy_cache off;
        
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS' always;
        add_header Access-Control-Allow-Headers 'Range' always;
        add_header Access-Control-Expose-Headers 'Content-Length, Content-Range, Accept-Ranges' always;
    }

    # ================================================================
    # MONITORING SERVICES
    # ================================================================

    # Prometheus UI
    location /prometheus/ {
        proxy_pass http://prometheus:9090/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Admin access only
        # allow 10.0.0.0/8;
        # allow 172.16.0.0/12;
        # allow 192.168.0.0/16;
        # deny all;
    }

    # Grafana Dashboards
    location /grafana/ {
        proxy_pass http://grafana:4000/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Grafana-specific headers
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
    }

    # RabbitMQ Management Interface
    location /rabbitmq/ {
        proxy_pass http://queue_service:15672/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Admin access only
        # allow 10.0.0.0/8;
        # allow 172.16.0.0/12;
        # allow 192.168.0.0/16;
        # deny all;
    }

    # ================================================================
    # HEALTH CHECKS & STATUS
    # ================================================================
    
    # System-wide health check
    location /health {
        access_log off;
        add_header Content-Type application/json;
        return 200 '{"status":"healthy","service":"nginx","architecture":"master-slave","timestamp":"$time_iso8601"}';
    }

    # Nginx status (for monitoring)
    location /nginx-status {
        stub_status on;
        access_log off;
        
        # Restrict to monitoring systems
        allow 127.0.0.1;
        allow 172.20.0.0/16;  # Docker network
        deny all;
    }

    # Database status endpoint (proxy to database manager)
    location /database-status {
        proxy_pass http://database_manager_servers/status;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        
        # Quick timeout for status checks
        proxy_read_timeout 10s;
        proxy_connect_timeout 5s;
        
        add_header Content-Type application/json;
    }

    # ================================================================
    # ERROR PAGES
    # ================================================================
    
    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        add_header Content-Type text/html;
        return 404 '<!DOCTYPE html><html><head><title>404 - Not Found</title></head><body><h1>UALFlix - Page Not Found</h1><p>The requested resource was not found.</p><a href="/">Return to Home</a></body></html>';
    }
    
    location = /50x.html {
        add_header Content-Type text/html;
        return 500 '<!DOCTYPE html><html><head><title>500 - Server Error</title></head><body><h1>UALFlix - Server Error</h1><p>The server encountered an error. Please try again later.</p><a href="/">Return to Home</a></body></html>';
    }

    # ================================================================
    # SECURITY & PERFORMANCE
    # ================================================================
    
    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Static assets caching (if served through nginx)
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # Rate limiting (uncomment to enable)
    # limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    # limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
    
    # location /api/ {
    #     limit_req zone=api burst=20 nodelay;
    # }
    
    # location /api/upload {
    #     limit_req zone=upload burst=5 nodelay;
    # }
}

# ================================================================
# ADDITIONAL SERVER BLOCKS
# ================================================================

# Direct access to database manager (admin only)
server {
    listen 8081;
    server_name localhost;
    
    # Restrict access
    allow 127.0.0.1;
    allow 10.0.0.0/8;
    allow 172.16.0.0/12;
    allow 192.168.0.0/16;
    deny all;
    
    location / {
        proxy_pass http://database_manager_servers;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Load balancer stats (if HAProxy is used)
server {
    listen 8082;
    server_name localhost;
    
    # Restrict access
    allow 127.0.0.1;
    allow 172.20.0.0/16;
    deny all;
    
    location / {
        proxy_pass http://load_balancer:8091;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
    }
}
>>>>>>> Stashed changes
