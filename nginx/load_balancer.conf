upstream frontend_servers {
    server frontend_1:3000;
    server frontend_2:3000;
    least_conn;
}

upstream catalog_servers {
    server catalog_service_1:8000;
    server catalog_service_2:8000 backup;
}

upstream streaming_servers {
    server streaming_service_1:8001;
    server streaming_service_2:8001;
    ip_hash;
}

server {
    listen 80;
    server_name localhost;
    client_max_body_size 1024M; 

    # Frontend (React app)
    location / {
        proxy_pass http://frontend_servers;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # API Backend (Catalog Service)
    location /api/ {
        rewrite ^/api(/.*)$ $1 break;
        proxy_pass http://catalog_servers;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Servir vídeos através do streaming service
    location /videos/ {
        proxy_pass http://streaming_servers/stream/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Prometheus UI
    location /prometheus/ {
        proxy_pass http://prometheus:9090/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Grafana UI
    location /grafana/ {
        proxy_pass http://grafana:3000/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}