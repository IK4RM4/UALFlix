apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-config
  namespace: $(NAMESPACE)
data:
  init-replica.js: |
    print(" UALFlix - Inicializando MongoDB Replica Set no Kubernetes...");
    sleep(10000);
    
    try {
        var config = {
            _id: "ualflix-replica-set",
            members: [
                { _id: 0, host: "mongodb-0.mongodb-service.$(NAMESPACE).svc.cluster.local:27017", priority: 2 },
                { _id: 1, host: "mongodb-1.mongodb-service.$(NAMESPACE).svc.cluster.local:27017", priority: 1 },
                { _id: 2, host: "mongodb-2.mongodb-service.$(NAMESPACE).svc.cluster.local:27017", arbiterOnly: true }
            ]
        };
        
        var result = rs.initiate(config);
        print("Resultado:", JSON.stringify(result));
        sleep(15000);
        
        db = db.getSiblingDB('admin');
        db.createUser({
            user: "admin",
            pwd: "password",
            roles: [{ role: "root", db: "admin" }]
        });
        
        db = db.getSiblingDB('ualflix');
        db.createCollection('users');
        db.createCollection('videos');
        db.users.createIndex({ "username": 1 }, { unique: true });
        
        print("MongoDB Replica Set configurado!");
    } catch (error) {
        print(" Erro:", error.message);
        throw error;
    }