services:
  ualflix_db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ualflix
    networks:
      - ualflix_network
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db_init.sql:/docker-entrypoint-initdb.d/db_init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  catalog_service:
    build: ./catalog_service
    depends_on:
      ualflix_db:
        condition: service_healthy
      queue_service:
        condition: service_started
    networks:
      - ualflix_network
    volumes:
      - video_storage:/videos
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  authentication_service:
    build: ./authentication_service
    depends_on:
      ualflix_db:
        condition: service_healthy
    networks:
      - ualflix_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  streaming_service:
    build: ./streaming_service
    volumes:
      - video_storage:/videos
    networks:
      - ualflix_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  video_processor:
    build: ./video_processor
    depends_on:
      queue_service:
        condition: service_started
    networks:
      - ualflix_network
    volumes:
      - video_storage:/videos

  queue_service:
    image: rabbitmq:3-management
    networks:
      - ualflix_network
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=ualflix
      - RABBITMQ_DEFAULT_PASS=ualflix_password
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  frontend:
    build: ./frontend
    networks:
      - ualflix_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - video_storage:/videos
    depends_on:
      frontend:
        condition: service_healthy
      catalog_service:
        condition: service_healthy
      authentication_service:
        condition: service_healthy
      streaming_service:
        condition: service_healthy
    networks:
      - ualflix_network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - ualflix_network
    depends_on:
      - catalog_service
      - streaming_service

  grafana:
    image: grafana/grafana:latest
    ports:
      - "4000:4000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - ualflix_network
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_HTTP_PORT=4000

volumes:
  db_data:
  video_storage:
  grafana_data:

networks:
  ualflix_network:
    driver: bridge